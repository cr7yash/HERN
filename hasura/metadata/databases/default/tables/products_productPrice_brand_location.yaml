table:
  name: productPrice_brand_location
  schema: products
object_relationships:
- name: addedByApiKeyReference
  using:
    foreign_key_constraint_on: addedByApiKey
- name: updatedByApiKeyReference
  using:
    foreign_key_constraint_on: updatedByApiKey
insert_permissions:
- permission:
    backend_only: false
    check:
      addedByApiKeyReference:
        canAddProducts:
          _eq: true
    columns:
    - brandId
    - brandMenuCategoryId
    - brand_locationId
    - isAvailable
    - isPublished
    - locationId
    - markupOnStandardPriceInPercentage
    - modifierCategoryOptionId
    - productId
    - productOptionId
    - specificDiscount
    - specificPrice
    set:
      addedByApiKey: x-hasura-Api-Key
  role: apiKeyRole
select_permissions:
- permission:
    columns:
    - isAvailable
    - isPublished
    - brandId
    - brand_locationId
    - id
    - locationId
    - modifierCategoryOptionId
    - productId
    - productOptionId
    - markupOnStandardPriceInPercentage
    - specificDiscount
    - specificPrice
    - addedByApiKey
    - updatedByApiKey
    - brandMenuCategoryId
    filter: {}
  role: apiKeyRole
update_permissions:
- permission:
    check:
      updatedByApiKeyReference:
        canUpdateProducts:
          _eq: true
    columns:
    - brandId
    - brandMenuCategoryId
    - brand_locationId
    - isAvailable
    - isPublished
    - locationId
    - markupOnStandardPriceInPercentage
    - modifierCategoryOptionId
    - productId
    - productOptionId
    - specificDiscount
    - specificPrice
    filter:
      updatedByApiKeyReference:
        canUpdateProducts:
          _eq: true
    set:
      updatedByApiKey: x-hasura-Api-Key
  role: apiKeyRole
delete_permissions:
- permission:
    filter:
      updatedByApiKeyReference:
        canDeleteProducts:
          _eq: true
  role: apiKeyRole
