table:
  name: inventoryProductBundle
  schema: products
configuration:
  custom_column_names: {}
  custom_root_fields:
    delete: deleteInventoryProductBundles
    delete_by_pk: deleteInventoryProductBundle
    insert: createInventoryProductBundles
    insert_one: createInventoryProductBundle
    select: inventoryProductBundles
    select_aggregate: inventoryProductBundlesAggregate
    select_by_pk: inventoryProductBundle
    update: updateInventoryProductBundles
    update_by_pk: updateInventoryProductBundle
object_relationships:
- name: addedByApiKeyReference
  using:
    foreign_key_constraint_on: addedByApiKey
- name: updatedByApiKeyReference
  using:
    foreign_key_constraint_on: updatedByApiKey
array_relationships:
- name: inventoryProductBundleSachets
  using:
    foreign_key_constraint_on:
      column: inventoryProductBundleId
      table:
        name: inventoryProductBundleSachet
        schema: products
insert_permissions:
- permission:
    backend_only: false
    check:
      addedByApiKeyReference:
        canAddProducts:
          _eq: true
    columns:
    - label
    set:
      addedByApiKey: x-hasura-Api-Key
  role: apiKeyRole
select_permissions:
- permission:
    columns:
    - label
    filter: {}
  role: apiKeyRole
update_permissions:
- permission:
    check: null
    columns:
    - label
    filter:
      updatedByApiKeyReference:
        canUpdateProducts:
          _eq: true
    set:
      updatedByApiKey: x-hasura-Api-Key
  role: apiKeyRole
delete_permissions:
- permission:
    filter:
      updatedByApiKeyReference:
        canDeleteProducts:
          _eq: true
  role: apiKeyRole
