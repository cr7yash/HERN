table:
  name: customizableProductComponent
  schema: products
configuration:
  custom_column_names: {}
  custom_root_fields:
    delete: deleteCustomizableProductComponents
    delete_by_pk: deleteCustomizableProductComponent
    insert: createCustomizableProductComponents
    insert_one: createCustomizableProductComponent
    select: customizableProductComponents
    select_aggregate: customizableProductComponentsAggregate
    select_by_pk: customizableProductComponent
    update: updateCustomizableProductComponents
    update_by_pk: updateCustomizableProductComponent
object_relationships:
- name: addedByApiKeyReference
  using:
    foreign_key_constraint_on: addedByApiKey
- name: linkedProduct
  using:
    foreign_key_constraint_on: linkedProductId
- name: product
  using:
    foreign_key_constraint_on: productId
- name: updatedByApiKeyReference
  using:
    foreign_key_constraint_on: updatedByApiKey
array_relationships:
- name: cartItems
  using:
    foreign_key_constraint_on:
      column: customizableProductComponentId
      table:
        name: cartItem
        schema: order
- name: selectedOptions
  using:
    manual_configuration:
      column_mapping:
        id: customizableComponentId
      insertion_order: null
      remote_table:
        name: customizableComponentOptions
        schema: products
computed_fields:
- comment: ""
  definition:
    function:
      name: customizableProductComponentFullName
      schema: products
  name: fullName
insert_permissions:
- permission:
    backend_only: false
    check:
      addedByApiKeyReference:
        canAddProducts:
          _eq: true
    columns:
    - isArchived
    - linkedProductId
    - options
    - position
    - productId
    set:
      addedByApiKey: x-hasura-Api-Key
  role: apiKeyRole
select_permissions:
- permission:
    columns:
    - created_at
    - id
    - isArchived
    - linkedProductId
    - options
    - position
    - productId
    - updated_at
    computed_fields:
    - fullName
    filter: {}
  role: apiKeyRole
- permission:
    allow_aggregations: true
    columns:
    - id
    - created_at
    - updated_at
    - isArchived
    - options
    - position
    - productId
    - linkedProductId
    filter: {}
  role: consumer
- permission:
    allow_aggregations: true
    columns:
    - isArchived
    - id
    - linkedProductId
    - productId
    - options
    - position
    - created_at
    - updated_at
    filter: {}
  role: guest-consumer
update_permissions:
- permission:
    check: null
    columns:
    - isArchived
    - linkedProductId
    - options
    - position
    - productId
    filter:
      updatedByApiKeyReference:
        canUpdateProducts:
          _eq: true
    set:
      updatedByApiKey: x-hasura-Api-Key
  role: apiKeyRole
delete_permissions:
- permission:
    filter:
      updatedByApiKeyReference:
        canDeleteProducts:
          _eq: true
  role: apiKeyRole
