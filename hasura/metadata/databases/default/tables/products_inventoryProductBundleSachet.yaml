table:
  name: inventoryProductBundleSachet
  schema: products
configuration:
  custom_column_names: {}
  custom_root_fields:
    delete: deleteInventoryProductBundleSachets
    delete_by_pk: deleteInventoryProductBundleSachet
    insert: createInventoryProductBundleSachets
    insert_one: createInventoryProductBundleSachet
    select: inventoryProductBundleSachets
    select_aggregate: inventoryProductBundleSachetsAggregate
    select_by_pk: inventoryProductBundleSachet
    update: updateInventoryProductBundleSachets
    update_by_pk: updateInventoryProductBundleSachet
object_relationships:
- name: addedByApiKeyReference
  using:
    foreign_key_constraint_on: addedByApiKey
- name: sachetItem
  using:
    foreign_key_constraint_on: sachetItemId
- name: updatedByApiKeyReference
  using:
    foreign_key_constraint_on: updatedByApiKey
insert_permissions:
- permission:
    backend_only: false
    check:
      addedByApiKeyReference:
        canAddProducts:
          _eq: true
    columns:
    - bulkItemId
    - bulkItemQuantity
    - inventoryProductBundleId
    - sachetItemId
    - supplierItemId
    set:
      addedByApiKey: x-hasura-Api-Key
  role: apiKeyRole
select_permissions:
- permission:
    columns:
    - bulkItemId
    - bulkItemQuantity
    - inventoryProductBundleId
    - sachetItemId
    - supplierItemId
    filter: {}
  role: apiKeyRole
update_permissions:
- permission:
    check: null
    columns:
    - bulkItemId
    - bulkItemQuantity
    - inventoryProductBundleId
    - sachetItemId
    - supplierItemId
    filter:
      updatedByApiKeyReference:
        canUpdateProducts:
          _eq: true
    set:
      updatedByApiKey: x-hasura-Api-Key
  role: apiKeyRole
delete_permissions:
- permission:
    filter:
      updatedByApiKeyReference:
        canDeleteProducts:
          _eq: true
  role: apiKeyRole
