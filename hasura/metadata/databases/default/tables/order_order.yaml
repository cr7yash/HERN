table:
  name: order
  schema: order
configuration:
  custom_column_names: {}
  custom_root_fields:
    delete: deleteOrders
    delete_by_pk: deleteOrder
    insert: createOrders
    insert_one: createOrder
    select: orders
    select_aggregate: ordersAggregate
    select_by_pk: order
    update: updateOrders
    update_by_pk: updateOrder
object_relationships:
- name: addedByApiKeyReference
  using:
    foreign_key_constraint_on: addedByApiKey
- name: brand
  using:
    manual_configuration:
      column_mapping:
        brandId: id
      insertion_order: null
      remote_table:
        name: brand
        schema: brands
- name: cart
  using:
    foreign_key_constraint_on: cartId
- name: customer
  using:
    manual_configuration:
      column_mapping:
        keycloakId: keycloakId
      insertion_order: null
      remote_table:
        name: customer
        schema: crm
- name: deliveryService
  using:
    foreign_key_constraint_on: deliveryPartnershipId
- name: orderDate
  using:
    manual_configuration:
      column_mapping:
        created_at: date
      insertion_order: null
      remote_table:
        name: date
        schema: insights
- name: thirdPartyOrder
  using:
    foreign_key_constraint_on: thirdPartyOrderId
- name: updatedByApiKeyReference
  using:
    foreign_key_constraint_on: updatedByApiKey
array_relationships:
- name: rewardHistories
  using:
    foreign_key_constraint_on:
      column: orderId
      table:
        name: rewardHistory
        schema: crm
computed_fields:
- comment: ""
  definition:
    function:
      name: ordersummary
      schema: order
  name: summary
insert_permissions:
- permission:
    backend_only: false
    check:
      addedByApiKeyReference:
        canAddOrders:
          _eq: true
    columns:
    - amountPaid
    - brandId
    - cartId
    - currency
    - deliveryInfo
    - deliveryPartnershipId
    - deliveryPrice
    - discount
    - fulfillmentTimestamp
    - fulfillmentType
    - isAccepted
    - isArchived
    - isRejected
    - itemTotal
    - keycloakId
    - readyByTimestamp
    - tax
    - thirdPartyOrderId
    - tip
    set:
      addedByApiKey: x-hasura-Api-Key
  role: apiKeyRole
select_permissions:
- permission:
    columns:
    - isAccepted
    - isArchived
    - isRejected
    - created_at_date
    - tax
    - brandId
    - cartId
    - created_at_day
    - created_at_dow
    - created_at_hour
    - created_at_month
    - created_at_quarter
    - created_at_week
    - created_at_year
    - deliveryPartnershipId
    - thirdPartyOrderId
    - deliveryInfo
    - lastUpdatedBy
    - amountPaid
    - deliveryPrice
    - discount
    - itemTotal
    - tip
    - id
    - addedByApiKey
    - currency
    - fulfillmentType
    - keycloakId
    - updatedByApiKey
    - created_at
    - fulfillmentTimestamp
    - readyByTimestamp
    - updated_at
    computed_fields:
    - summary
    filter: {}
  role: apiKeyRole
update_permissions:
- permission:
    check: null
    columns:
    - amountPaid
    - brandId
    - cartId
    - currency
    - deliveryInfo
    - deliveryPartnershipId
    - deliveryPrice
    - discount
    - fulfillmentTimestamp
    - fulfillmentType
    - id
    - isAccepted
    - isArchived
    - isRejected
    - itemTotal
    - keycloakId
    - readyByTimestamp
    - tax
    - thirdPartyOrderId
    - tip
    filter:
      updatedByApiKeyReference:
        canUpdateOrders:
          _eq: true
    set:
      updatedByApiKey: x-hasura-Api-Key
  role: apiKeyRole
delete_permissions:
- permission:
    filter:
      updatedByApiKeyReference:
        canDeleteOrders:
          _eq: true
  role: apiKeyRole
event_triggers:
- definition:
    enable_manual: true
    insert:
      columns: "*"
  name: Order_Created
  retry_conf:
    interval_sec: 10
    num_retries: 0
    timeout_sec: 60
  webhook: "{{ORGANIZATION_URL}}/{{DAILYOS_SERVER_URL}}/webhook/notification/manage"
- definition:
    enable_manual: true
    update:
      columns:
      - deliveryPartnershipId
  headers:
  - name: OrganizationId
    value_from_env: HEADER_REMOTE_SCHEMA_ORGANIZATIONID
  name: createDelivery
  retry_conf:
    interval_sec: 10
    num_retries: 0
    timeout_sec: 60
  webhook_from_env: WEBHOOK_CREATE_DELIVERY
- definition:
    enable_manual: false
    insert:
      columns: "*"
  name: orderReceivedWebhookEvent
  retry_conf:
    interval_sec: 10
    num_retries: 0
    timeout_sec: 60
  webhook: https://test.dailykit.org/server/sendWebhookEvent
- definition:
    enable_manual: false
    insert:
      columns: "*"
  name: order_recieve
  retry_conf:
    interval_sec: 10
    num_retries: 0
    timeout_sec: 60
  webhook: "{{ORGANIZATION_URL}}/{{DAILYOS_SERVER_URL}}/api/developer/webhookEvents/processWebhookEvents"
